deadlock происходит, когда существуют минимум 2 потока и 2 критических ресурса. Потоки оккупируют ресурсы по очереди. Если ресурс занят, то поток останавливает выполнение до освобождение ресурса.
Если каждый поток захватит тольо по одному ресурсу, и будет ждать пока другой осовободит второй ресурс, то они будут ждать друг друга вечно. Пока кто-то третий их не прервет.

Название starvation полностью соответствует проблеме. Когда множество потоков постоянно находятся в борьбе за один критический ресурс, то все ждут, пока кто-то один освободит этот ресурс. Потом из ждущих по какому-либо алгоритму выбирается только кто-то один, кто следующим захватит ресурс. Таким образом, может найтись один такой поток, который никогда не получит доступ к ресурсу, потому что другие потоки постоянно захватывают ресурс раньше него.

livelock частая проблема в асинхронных системах. Там потоки почти не блокируются на критических ресурсах. Вместо этого они выполняют свою небольшую неблокируемую задачу и отправляют её в очередь на обработку другими потоками. Может возникнуть ситуация, когда потоки друг другу начинают перекидывать какое-то событие и его обработка зацикливается. Явного бесконечного цикла, как бы, не происходит, но нагрузка на асинхронную систему резко возрастает. В результате чего эти потоки больше ничем не успевают занимаются.